"use client";

import { LibraryType } from "./libraryTypes";
import { twMerge } from "tailwind-merge";
import { TAnlaysisCode } from "@/types/my-library/vulnerability-analysis";

type TFileAnalyzeProps = { code?: string | null } & React.ComponentProps<"div">;
type PropTypes = TAnlaysisCode & {
  className?: string;
  children?: React.ReactNode;
  onClose?: () => void;
} & TFileAnalyzeProps;

function AnalyzingState({ code }: { code: string | null }) {
  return <pre className={"whitespace-pre-wrap text-[#171717]"}>{code}</pre>;
}

function WaitState() {
  return (
    <>
      <div
        className={
          "flex h-full w-full flex-col items-center justify-center gap-8"
        }
      >
        {/* <Image
          src={"/images/glass-plus.svg"}
          alt={"Analyzing"}
          width={48}
          height={48}
        /> */}
        <p className={"text-[32px] font-medium text-primary-500"}>
          파일을 선택하세요
        </p>
      </div>
    </>
  );
}
const VulnerabilityAnalysisCode = ({
  className,
  status = "",
  onClose = () => {},
  children,
  code,
}: PropTypes) => {
  return (
    <>
      <div
        className={twMerge(
          "h-[1100px] w-[1484px] overflow-y-auto rounded-xl border border-line-default p-10",
          className,
        )}
      >
        {code ? <AnalyzingState code={code} /> : <WaitState />}
      </div>
    </>
  );
};
export default VulnerabilityAnalysisCode;
