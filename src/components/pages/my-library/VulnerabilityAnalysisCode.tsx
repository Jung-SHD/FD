"use client";

import { LibraryType } from "./libraryTypes";  // 사용되지 않는 import
import { twMerge } from "tailwind-merge";      // Tailwind CSS를 병합하는 도구
import { TAnlaysisCode } from "@/types/my-library/vulnerability-analysis"; // 타입 정의

// 파일 분석을 위한 Prop 타입 정의
type TFileAnalyzeProps = { code?: string | null } & React.ComponentProps<"div">;
type PropTypes = TAnlaysisCode & {
  className?: string;
  children?: React.ReactNode;
  onClose?: () => void;
} & TFileAnalyzeProps;

// 분석 중일 때 상태를 보여주는 컴포넌트
function AnalyzingState({ code }: { code: string | null }) {
  return <pre className={"whitespace-pre-wrap text-[#171717]"}>{code}</pre>;
}

// 파일이 선택되지 않았을 때 보여주는 대기 상태 컴포넌트
function WaitState() {
  return (
    <div className={"flex h-full w-full flex-col items-center justify-center gap-8"}>
      <p className={"text-[32px] font-medium text-primary-500"}>파일을 선택하세요</p>
    </div>
  );
}

// 코드 분석을 위한 메인 컴포넌트
const VulnerabilityAnalysisCode = ({
  className,
  status = "",
  onClose = () => {},
  children,
  code,
}: PropTypes) => {
  return (
    <div className={twMerge(
      "h-[1100px] w-[1484px] overflow-y-auto rounded-xl border border-line-default p-10",
      className,
    )}>
      {code ? <AnalyzingState code={code} /> : <WaitState />}
    </div>
  );
};

export default VulnerabilityAnalysisCode;
