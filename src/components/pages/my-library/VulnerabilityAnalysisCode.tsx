"use client";

import { LibraryType } from "./libraryTypes";
import { twMerge } from "tailwind-merge";
import Bug from "@/assets/icons/Bug.svg";
import InfoBox from "@/components/atoms/infobox/infobox";
import { TAnlaysisCode } from "@/app/my-library/vulnerability-analysis/page";
import ModalTitle from "@/components/atoms/modal/ModalTitle";
import Modal from "@/components/atoms/modal";
import ModalExplanation from "@/components/atoms/modal/ModalExplanation";

type PropTypes = TAnlaysisCode & {
  className: string;
  children: React.ReactNode;
};

const VulnerabilityAnalysisCode = ({
  className,
  status = "",
  children,
}: PropTypes) => {
  return (
    <>
      {status === "analyzing" ? (
        <>
          <Modal>
            <div className="inset-0 mb-[10px] flex items-center justify-center text-center">
              <Bug />
            </div>
            <ModalTitle titleText="소스코드 취약점 분석중"></ModalTitle>
            <ModalExplanation explanationText="AI 플로디텍터가 문제를 분석중 입니다. 코드가 많을수록 처리시간이 길어집니다."></ModalExplanation>
          </Modal>
        </>
      ) : (
        <>
          <div
            className={twMerge(
              "h-[980px] w-[729px] rounded-xl border border-line-default p-10",
              className,
            )}
          >
            {children}
          </div>
        </>
      )}
    </>
  );
};
export default VulnerabilityAnalysisCode;
